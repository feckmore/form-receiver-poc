service: form-receiver-poc
frameworkVersion: "2"
configValidationMode: error

custom:
  topicName: form-receiver-topic
  processQueueName: form-receiver-process-queue
  storageQueueName: form-receiver-storage-queue
  tableName: form-reciever-table

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  environment:
    REGION: ${self:provider.region}
    DYNAMODB_TABLE_NAME: ${self:custom.tableName}
    SNS_TOPIC_NAME: ${self:custom.topicName}
    SNS_TOPIC_ARN: !Ref FormTopic
    STAGE: ${self:provider.stage}

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "*"
          Resource: arn:aws:sns:*:*:${self:custom.topicName}
        - Effect: "Allow"
          Action:
            - "*"
          Resource: arn:aws:sqs:*:*:${self:custom.processQueueName}
        - Effect: "Allow"
          Action:
            - "*"
          Resource: arn:aws:sqs:*:*:${self:custom.storageQueueName}
        - Effect: "Allow"
          Action:
            - "*"
          Resource: arn:aws:dynamodb:*:*:table/${self:custom.tableName}

package:
  patterns:
    - "!./**"
    - ./bin/**

functions:
  submit: # Lambda validates form submission & publishes message to SNS topic
    handler: bin/submit
    events:
      - httpApi:
          path: /submit
          method: post

  process:
    handler: bin/process
    events:
      - sqs:
          arn: !GetAtt
            - ProcessQueue
            - Arn

  storage:
    handler: bin/store
    events:
      - sqs:
          arn: !GetAtt
            - StorageQueue
            - Arn

resources:
  Resources:
    FormTopic: # Create SNS Topic
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.topicName}

    ProcessQueue: # Create SQS Queue for processing
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.processQueueName}

    StorageQueue: # Create SQS Queue for storage
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.storageQueueName}

    ProcessQueueTopicSubscription:
      Type: AWS::SNS::Subscription # subscribe SQS to SNS topic
      Properties:
        TopicArn: !Ref FormTopic
        Endpoint: !GetAtt
          - ProcessQueue
          - Arn
        Protocol: sqs
        RawMessageDelivery: "true"

    StorageQueueTopicSubscription:
      Type: AWS::SNS::Subscription # subscribe SQS to SNS topic
      Properties:
        TopicArn: !Ref FormTopic
        Endpoint: !GetAtt
          - StorageQueue
          - Arn
        Protocol: sqs
        RawMessageDelivery: "true"

    ProcessQueueSNSPolicy:
      Type: AWS::SQS::QueuePolicy # allow SNS to send messages to SQS
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "allow-sns-messages"
              Effect: Allow
              Principal: "*"
              Action: SQS:SendMessage
              Resource: !GetAtt
                - ProcessQueue
                - Arn
              Condition:
                ArnEquals:
                  "aws:SourceArn": !Ref FormTopic
        Queues:
          - Ref: ProcessQueue

    StorageQueueSNSPolicy:
      Type: AWS::SQS::QueuePolicy # allow SNS to send messages to SQS
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "allow-sns-messages"
              Effect: Allow
              Principal: "*"
              Action: SQS:SendMessage
              Resource: !GetAtt
                - StorageQueue
                - Arn
              Condition:
                ArnEquals:
                  "aws:SourceArn": !Ref FormTopic
        Queues:
          - Ref: StorageQueue

    FormTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: "pk"
            AttributeType: "S"
          - AttributeName: "sk"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "pk"
            KeyType: "HASH"
          - AttributeName: "sk"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: "1"
          WriteCapacityUnits: "1"
